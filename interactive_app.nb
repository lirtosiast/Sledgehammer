(* Content-type: application/vnd.wolfram.mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Mathematica 11.2' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       158,          7]
NotebookDataLength[     24935,        530]
NotebookOptionsPosition[     24365,        511]
NotebookOutlinePosition[     24727,        527]
CellTagsIndexPosition[     24684,        524]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{

Cell[CellGroupData[{
Cell[BoxData[{
 RowBox[{
  RowBox[{"Get", "[", 
   RowBox[{"\"\<Sledgehammer`\>\"", ",", " ", 
    RowBox[{"Path", " ", "\[Rule]", " ", 
     RowBox[{"ParentDirectory", "@", 
      RowBox[{"NotebookDirectory", "[", "]"}]}]}]}], "]"}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"Sledgehammer`SledgehammerGUI", "[", "]"}]}], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.7674613148730574`*^9, 3.767461317557584*^9}, {
   3.767461364008748*^9, 3.7674613865786743`*^9}, {3.767461431823718*^9, 
   3.767461464194298*^9}, {3.7674617646912537`*^9, 3.7674618275048046`*^9}, {
   3.7674618610857086`*^9, 3.7674619675655727`*^9}, {3.7674620047422733`*^9, 
   3.767462045731682*^9}, {3.767462194976065*^9, 3.767462213418771*^9}, {
   3.767463578975291*^9, 3.767463649494282*^9}, 3.767463691401148*^9, {
   3.767463722016713*^9, 3.7674637240182505`*^9}, {3.7674639922275553`*^9, 
   3.7674640030918894`*^9}, {3.7674641293680687`*^9, 3.767464135973136*^9}, {
   3.7674641659742904`*^9, 3.7674642114642315`*^9}, {3.767464252486929*^9, 
   3.7674642721775813`*^9}, {3.7674643116510334`*^9, 
   3.7674643221019216`*^9}, {3.767464902874652*^9, 3.767464949993264*^9}, {
   3.767464996295643*^9, 3.7674650560815697`*^9}, {3.767465087734498*^9, 
   3.767465312411725*^9}, {3.767465396905928*^9, 3.767465419819413*^9}, {
   3.76746551951373*^9, 3.7674655950512347`*^9}, {3.767465695486286*^9, 
   3.7674658296513066`*^9}, {3.7674658601985617`*^9, 3.767466059744135*^9}, {
   3.7674661091934223`*^9, 3.767466263717037*^9}, {3.767466297229704*^9, 
   3.7674665575736275`*^9}, {3.767466594478712*^9, 3.7674666006189756`*^9}, {
   3.7674667152675047`*^9, 3.767466788528231*^9}, {3.76746685686872*^9, 
   3.767466901190629*^9}, {3.767467013726942*^9, 3.7674670255639734`*^9}, {
   3.767467181484248*^9, 3.767467192045411*^9}, {3.7674672524645452`*^9, 
   3.767467295665216*^9}, {3.7674673574685764`*^9, 3.7674674963081846`*^9}, {
   3.7674675289403095`*^9, 3.7674675340541325`*^9}, {3.76746757298781*^9, 
   3.7674675874164677`*^9}, {3.76746763087671*^9, 3.767467642692244*^9}, {
   3.7674676824478345`*^9, 3.76746770586156*^9}, {3.767467740776146*^9, 
   3.767467741777401*^9}, {3.7674908350984564`*^9, 3.7674908982434993`*^9}, {
   3.767490956249745*^9, 3.767490960718503*^9}, {3.7674911819334745`*^9, 
   3.76749120742262*^9}, {3.767491239062975*^9, 3.767491271935687*^9}, {
   3.767491311969945*^9, 3.7674913124525614`*^9}, {3.767491457025051*^9, 
   3.767491465833515*^9}, {3.767491511152277*^9, 3.767491610387621*^9}, {
   3.7674916786753674`*^9, 3.767491695710125*^9}, {3.7674917389783974`*^9, 
   3.767491773622029*^9}, {3.7674918896280003`*^9, 3.767491976751356*^9}, {
   3.7674920148435717`*^9, 3.7674920484324055`*^9}, {3.7674921611644077`*^9, 
   3.767492176593827*^9}, {3.7674922344383235`*^9, 3.767492279946725*^9}, {
   3.7674923480302687`*^9, 3.76749242773275*^9}, {3.767492468162644*^9, 
   3.7674925125218925`*^9}, {3.7674925870578175`*^9, 3.767492629731082*^9}, {
   3.767492669719041*^9, 3.767492678647958*^9}, {3.76749271652026*^9, 
   3.7674927601610703`*^9}, {3.767492792380678*^9, 3.76749289128728*^9}, {
   3.7674929831545315`*^9, 3.767493106105425*^9}, {3.7674931535355244`*^9, 
   3.7674935154494314`*^9}, {3.7674935548042355`*^9, 3.767493568009781*^9}, {
   3.7675502021197753`*^9, 3.767550223331442*^9}, {3.76755025428952*^9, 
   3.7675502959652057`*^9}, {3.7675503619967723`*^9, 
   3.7675505282367163`*^9}, {3.7675505993953695`*^9, 3.7675506262538643`*^9}, 
   3.7675506781674623`*^9, {3.7675507360988398`*^9, 3.7675507391395445`*^9}, {
   3.7675507883085337`*^9, 3.7675508060966406`*^9}, {3.767550919705526*^9, 
   3.7675509946999006`*^9}, {3.76755129589685*^9, 3.767551298257598*^9}, {
   3.767568823156766*^9, 3.767568852921087*^9}, {3.7675689088055058`*^9, 
   3.767568909460805*^9}, 3.7675731142112813`*^9, {3.767573884481518*^9, 
   3.767573896916336*^9}, {3.767574011230595*^9, 3.7675740392799945`*^9}, {
   3.767811274982366*^9, 3.7678113002617297`*^9}, {3.7678327984615593`*^9, 
   3.767832849288883*^9}, {3.767832904004052*^9, 3.7678329169700994`*^9}, {
   3.7678329498748903`*^9, 3.767832964460842*^9}, {3.7678330484555025`*^9, 
   3.7678332605956554`*^9}, {3.767919464781975*^9, 3.767919529082487*^9}, 
   3.767988183495757*^9, {3.767988381621436*^9, 3.767988393738879*^9}, {
   3.767988431074938*^9, 3.7679884706017113`*^9}, {3.76798853116011*^9, 
   3.76798855464403*^9}, {3.767988614070641*^9, 3.7679886471721025`*^9}, {
   3.7679887414141474`*^9, 3.767988965049281*^9}, {3.7679893147393045`*^9, 
   3.767989435566346*^9}, {3.7679894912123876`*^9, 3.7679895188993235`*^9}, {
   3.767989572012633*^9, 3.7679895970567913`*^9}, {3.7679899105291014`*^9, 
   3.767989912234855*^9}, {3.7679909536356936`*^9, 3.7679910432172136`*^9}, {
   3.7679911496559176`*^9, 3.7679911688188925`*^9}, {3.7679915495476694`*^9, 
   3.767991552076136*^9}, {3.76799171895324*^9, 3.767991733777089*^9}, 
   3.767993554113516*^9, {3.7679940002991095`*^9, 3.767994003280307*^9}, {
   3.767994083174265*^9, 3.767994091009771*^9}, {3.768243402035859*^9, 
   3.768243459112623*^9}, 3.7682434959060855`*^9, {3.7682435260414047`*^9, 
   3.768243552571559*^9}, {3.768252380106434*^9, 3.768252380842497*^9}, {
   3.768262403152917*^9, 3.7682624107356186`*^9}, {3.768262441107768*^9, 
   3.7682624546876373`*^9}, {3.76867429334336*^9, 3.7686743277829323`*^9}, 
   3.7686743595257635`*^9, {3.7686744024018035`*^9, 3.768674407009635*^9}, {
   3.768740829548462*^9, 3.768740848903527*^9}, {3.7687410332716846`*^9, 
   3.76874103356091*^9}, {3.7687413176530704`*^9, 3.768741319906605*^9}, {
   3.7687414211254587`*^9, 3.7687414274108896`*^9}, {3.7687416386691666`*^9, 
   3.7687416821209893`*^9}, {3.76874180514711*^9, 3.768741849305575*^9}, {
   3.7687420371478033`*^9, 3.7687420391420703`*^9}, {3.7687468964872284`*^9, 
   3.768746901182759*^9}, {3.7687470123979597`*^9, 3.76874702984507*^9}, {
   3.7687475832495937`*^9, 3.7687475869618254`*^9}, {3.768747627264134*^9, 
   3.768747645619771*^9}, {3.7687477382604947`*^9, 3.768747775918425*^9}, {
   3.7687479942173023`*^9, 3.7687479968066654`*^9}, {3.7687480364128857`*^9, 
   3.768748080020774*^9}, {3.7687482002384453`*^9, 3.768748240066416*^9}, {
   3.7687491196513815`*^9, 3.7687491693043485`*^9}, {3.768749470851033*^9, 
   3.7687494897294583`*^9}, {3.768750665344716*^9, 3.768750711118772*^9}, {
   3.7687508786446505`*^9, 3.7687508823471107`*^9}, {3.768750919890552*^9, 
   3.7687509655726304`*^9}, {3.768751241182712*^9, 3.768751303631513*^9}, {
   3.7687515846927633`*^9, 3.768751586292739*^9}, {3.768751638764007*^9, 
   3.768751667108102*^9}, 3.7687517111086025`*^9, {3.768752255923524*^9, 
   3.7687522729509926`*^9}, {3.7688449771934175`*^9, 
   3.7688450115381317`*^9}, {3.768845047857857*^9, 3.768845049306014*^9}, {
   3.768845081525533*^9, 3.7688451510929084`*^9}, {3.7688468784734154`*^9, 
   3.768847095680679*^9}, {3.7688471379617405`*^9, 3.7688472088521695`*^9}, {
   3.768920468954512*^9, 3.768920469482115*^9}, {3.7689530609396563`*^9, 
   3.7689530965902786`*^9}, {3.7689532517149115`*^9, 
   3.7689532598137465`*^9}, {3.768953419421709*^9, 3.768953446547829*^9}, {
   3.7689536383769846`*^9, 3.7689536430754905`*^9}, {3.7689541220999537`*^9, 
   3.7689541290993376`*^9}, {3.7689541806735077`*^9, 
   3.7689541831283855`*^9}, {3.768954251418889*^9, 3.7689542560522823`*^9}, 
   3.7689543027539363`*^9, {3.7689547991771545`*^9, 3.7689548481543627`*^9}, {
   3.7689549199678917`*^9, 3.7689549261479797`*^9}, {3.7689549645890226`*^9, 
   3.768954967177763*^9}, 3.7689550008630676`*^9, {3.768955080861831*^9, 
   3.7689550903397627`*^9}, {3.768955211517374*^9, 3.768955299804394*^9}, {
   3.76895537093262*^9, 3.768955377907905*^9}, {3.76895547344376*^9, 
   3.76895552972368*^9}, 3.7689555642431593`*^9, {3.768955752433609*^9, 
   3.7689558263700933`*^9}, {3.7689559193680825`*^9, 3.768955959284058*^9}, {
   3.7691003163392763`*^9, 3.7691004232245073`*^9}, {3.769100795136377*^9, 
   3.7691008900040083`*^9}, {3.76910096027248*^9, 3.76910108578094*^9}, {
   3.7691011306593733`*^9, 3.769101144086692*^9}, {3.769985388863101*^9, 
   3.769985392628992*^9}, {3.770741493363933*^9, 3.770741507259635*^9}, {
   3.7708180897547064`*^9, 3.770818101958572*^9}, {3.7727386669344716`*^9, 
   3.7727386714976454`*^9}, {3.7727387851110992`*^9, 3.772738788056221*^9}, {
   3.7727388203927593`*^9, 3.7727388410409937`*^9}, {3.773603566563089*^9, 
   3.773603578133133*^9}, {3.773604957000003*^9, 3.773604958554843*^9}, {
   3.7736054322438736`*^9, 3.7736054334758477`*^9}, {3.7736056176031446`*^9, 
   3.7736056181227875`*^9}, {3.773605653255744*^9, 3.773605657044651*^9}, 
   3.7736062337758784`*^9, {3.7998221883838882`*^9, 3.7998221927240076`*^9}},
 CellLabel->"In[5]:=",ExpressionUUID->"e6f65d0c-15d1-459a-85d8-afacb43b0641"],

Cell[BoxData[
 TemplateBox[{
  "General","compat",
   "\"Combinatorica Graph and Permutations functionality has been superseded \
by preloaded functionality. The package now being loaded may conflict with \
this. Please see the Compatibility Guide for details.\"",2,5,3,
   21361499603372916283,"Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{{3.799822150343373*^9, 3.799822150700658*^9}, 
   3.799822196853731*^9},
 CellLabel->
  "During evaluation of \
In[5]:=",ExpressionUUID->"c05c0587-40fb-4295-8b43-cfe6b3e76eed"],

Cell[BoxData[
 DynamicModuleBox[{Sledgehammer`Private`boxContents$$ = "", 
  Sledgehammer`Private`expr$$, Sledgehammer`Private`input$$ = {}, 
  Sledgehammer`Private`code$$, Sledgehammer`Private`pfCode$$, 
  Sledgehammer`Private`cmpCode$$, Sledgehammer`Private`brCode$$, 
  Sledgehammer`Private`lenBits$$, Sledgehammer`Private`lenBytes$$, 
  Sledgehammer`Private`decompCode$$, Sledgehammer`Private`cbs$$, 
  Sledgehammer`Private`result$$, Sledgehammer`Private`cgccString$$}, 
  TagBox[
   PanelBox[
    TagBox[GridBox[{
       {"\<\"Put code below:\"\>"},
       {
        TagBox[
         InputFieldBox[Dynamic[Sledgehammer`Private`boxContents$$], Boxes,
          
          BaseStyle->{
           "Notebook", "Input", 
            InputFieldBoxOptions -> {"ReturnEntersInput" -> False}, 
            ShowCodeAssist -> True, ShowSyntaxStyles -> True},
          FieldSize->{{40, 80}, {5, 
             DirectedInfinity[1]}}],
         EventHandlerTag[{
          "ReturnKeyDown" :> 
           Paste["\n"], {"MenuCommand", "HandleShiftReturn"} :> Paste["\n"], 
           Method -> "Preemptive", PassEventsDown -> Automatic, PassEventsUp -> 
           True}]]},
       {
        StyleBox[
         TemplateBox[{DynamicBox[
            ToBoxes[
             Length[
              Sledgehammer`Private`pfCode$$[]], StandardForm]],"\" tokens\""},
          "RowDefault"],
         StripOnInput->False,
         FontSize->Larger]},
       {
        StyleBox[
         TemplateBox[{DynamicBox[
            ToBoxes[
             Sledgehammer`Private`lenBits$$[], StandardForm]],"\" bits = \"",
           DynamicBox[
            ToBoxes[
             Sledgehammer`Private`lenBytes$$[], StandardForm]],"\" bytes\""},
          "RowDefault"],
         StripOnInput->False,
         FontSize->Larger]},
       {
        TemplateBox[{"\"Input (as a list): \"",InputFieldBox[
           Dynamic[Sledgehammer`Private`input$$]]},
         "RowDefault"]},
       {
        ButtonBox["\<\"Update\"\>",
         Appearance->Automatic,
         ButtonFunction:>(Sledgehammer`Private`code$$ = 
          Sledgehammer`Private`boxContents$$),
         Evaluator->Automatic,
         Method->"Preemptive"]},
       {
        InterpretationBox[
         StyleBox[
          RowBox[{GridBox[{
             {
              CheckboxBox[Dynamic[
                MemberQ[Sledgehammer`Private`cbs$$, "Show postfix"], 
                BoxForm`TogglerBarFunction[
                Sledgehammer`Private`cbs$$, "Show postfix"]& ],
               DefaultBaseStyle->"CheckboxBar"], 
              StyleBox["\<\"Show postfix\"\>", "CheckboxBarLabel",
               StripOnInput->False]}
            },
            AutoDelete->False,
            BaselinePosition->{1, 2},
            GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Baseline}}},
            
            GridBoxItemSize->{
             "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
            GridBoxSpacings->{"Columns" -> {
                Offset[0.27999999999999997`], {
                 Offset[0.21]}, 
                Offset[0.27999999999999997`]}, "Rows" -> {
                Offset[0.2], {
                 Offset[0.4]}, 
                Offset[0.2]}}], "  ", GridBox[{
             {
              CheckboxBox[Dynamic[
                MemberQ[Sledgehammer`Private`cbs$$, "Show bits"], 
                BoxForm`TogglerBarFunction[
                Sledgehammer`Private`cbs$$, "Show bits"]& ],
               DefaultBaseStyle->"CheckboxBar"], 
              StyleBox["\<\"Show bits\"\>", "CheckboxBarLabel",
               StripOnInput->False]}
            },
            AutoDelete->False,
            BaselinePosition->{1, 2},
            GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Baseline}}},
            
            GridBoxItemSize->{
             "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
            GridBoxSpacings->{"Columns" -> {
                Offset[0.27999999999999997`], {
                 Offset[0.21]}, 
                Offset[0.27999999999999997`]}, "Rows" -> {
                Offset[0.2], {
                 Offset[0.4]}, 
                Offset[0.2]}}], "  ", GridBox[{
             {
              CheckboxBox[Dynamic[
                MemberQ[Sledgehammer`Private`cbs$$, "Show Braille"], 
                BoxForm`TogglerBarFunction[
                Sledgehammer`Private`cbs$$, "Show Braille"]& ],
               DefaultBaseStyle->"CheckboxBar"], 
              StyleBox["\<\"Show Braille\"\>", "CheckboxBarLabel",
               StripOnInput->False]}
            },
            AutoDelete->False,
            BaselinePosition->{1, 2},
            GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Baseline}}},
            
            GridBoxItemSize->{
             "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
            GridBoxSpacings->{"Columns" -> {
                Offset[0.27999999999999997`], {
                 Offset[0.21]}, 
                Offset[0.27999999999999997`]}, "Rows" -> {
                Offset[0.2], {
                 Offset[0.4]}, 
                Offset[0.2]}}], "  ", GridBox[{
             {
              CheckboxBox[Dynamic[
                MemberQ[Sledgehammer`Private`cbs$$, "Decompress"], 
                BoxForm`TogglerBarFunction[
                Sledgehammer`Private`cbs$$, "Decompress"]& ],
               DefaultBaseStyle->"CheckboxBar"], 
              StyleBox["\<\"Decompress\"\>", "CheckboxBarLabel",
               StripOnInput->False]}
            },
            AutoDelete->False,
            BaselinePosition->{1, 2},
            GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Baseline}}},
            
            GridBoxItemSize->{
             "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
            GridBoxSpacings->{"Columns" -> {
                Offset[0.27999999999999997`], {
                 Offset[0.21]}, 
                Offset[0.27999999999999997`]}, "Rows" -> {
                Offset[0.2], {
                 Offset[0.4]}, 
                Offset[0.2]}}], "  ", GridBox[{
             {
              CheckboxBox[Dynamic[
                MemberQ[Sledgehammer`Private`cbs$$, "Eval"], 
                BoxForm`TogglerBarFunction[
                Sledgehammer`Private`cbs$$, "Eval"]& ],
               DefaultBaseStyle->"CheckboxBar"], 
              StyleBox["\<\"Eval\"\>", "CheckboxBarLabel",
               StripOnInput->False]}
            },
            AutoDelete->False,
            BaselinePosition->{1, 2},
            GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Baseline}}},
            
            GridBoxItemSize->{
             "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
            GridBoxSpacings->{"Columns" -> {
                Offset[0.27999999999999997`], {
                 Offset[0.21]}, 
                Offset[0.27999999999999997`]}, "Rows" -> {
                Offset[0.2], {
                 Offset[0.4]}, 
                Offset[0.2]}}]}], "Deploy"],
         CheckboxBar[
          Dynamic[Sledgehammer`Private`cbs$$], {
          "Show postfix", "Show bits", "Show Braille", "Decompress", 
           "Eval"}]]},
       {
        DynamicBox[ToBoxes[
          If[
           MemberQ[Sledgehammer`Private`cbs$$, "Show postfix"], 
           ReplaceAll[
            Sledgehammer`Private`pfCode$$[], 
            Sledgehammer`Private`formatRPRules], ""], StandardForm],
         ImageSizeCache->{0., {0., 9.}}]},
       {
        DynamicBox[ToBoxes[
          If[
           MemberQ[Sledgehammer`Private`cbs$$, "Show bits"], 
           Sledgehammer`Private`cmpCode$$[], ""], StandardForm],
         ImageSizeCache->{0., {0., 9.}}]},
       {
        DynamicBox[ToBoxes[
          If[
           MemberQ[Sledgehammer`Private`cbs$$, "Show Braille"], 
           Sledgehammer`Private`brCode$$[], ""], StandardForm],
         ImageSizeCache->{0., {0., 9.}}]},
       {
        DynamicBox[ToBoxes[
          If[
           MemberQ[Sledgehammer`Private`cbs$$, "Decompress"], 
           InputForm[
            Sledgehammer`Private`decompCode$$[]], ""], StandardForm],
         ImageSizeCache->{0., {0., 9.}}]},
       {
        DynamicBox[ToBoxes[
          If[
           MemberQ[Sledgehammer`Private`cbs$$, "Eval"], 
           Dynamic[
            Sledgehammer`Private`result$$[]], ""], StandardForm],
         ImageSizeCache->{0., {0., 9.}}]},
       {
        TagBox[
         DynamicModuleBox[{Typeset`var$$ = False}, 
          InterpretationBox[
           StyleBox[
            PaneSelectorBox[{False->GridBox[{
               {
                OpenerBox[Dynamic[Typeset`var$$],
                 Appearance->Automatic,
                 AutoAction->False,
                 ContinuousAction->False,
                 Enabled->Automatic], "\<\"CGCC submission\"\>"}
              },
              AutoDelete->False,
              BaselinePosition->{1, 1},
              GridBoxAlignment->{"Columns" -> {{Left}}},
              GridBoxBackground->{"Columns" -> {{Automatic}}},
              
              GridBoxItemSize->{
               "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
              GridBoxSpacings->{"Columns" -> {{0.2}}, "Rows" -> {{0.5}}}], 
             True->GridBox[{
               {
                OpenerBox[Dynamic[Typeset`var$$],
                 Appearance->Automatic,
                 AutoAction->False,
                 ContinuousAction->False,
                 Enabled->Automatic], "\<\"CGCC submission\"\>"},
               {"", 
                PaneBox[
                 TagBox[GridBox[{
                    {
                    ButtonBox["\<\"Copy\"\>",
                    Appearance->Automatic,
                    ButtonFunction:>CopyToClipboard[
                    Sledgehammer`Private`cgccString$$[]],
                    Evaluator->Automatic,
                    Method->"Preemptive"]},
                    {
                    FrameBox[
                    DynamicBox[ToBoxes[
                    Style[
                    Sledgehammer`Private`cgccString$$[], FontFamily -> 
                    "Courier"], StandardForm]],
                    StripOnInput->False]}
                   },
                   DefaultBaseStyle->"Column",
                   GridBoxAlignment->{"Columns" -> {{Left}}},
                   
                   GridBoxItemSize->{
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
                  "Column"],
                 ImageMargins->0]}
              },
              AutoDelete->False,
              BaselinePosition->{1, 1},
              GridBoxAlignment->{"Columns" -> {{Left}}},
              GridBoxBackground->{"Columns" -> {{Automatic}}},
              
              GridBoxItemSize->{
               "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
              GridBoxSpacings->{"Columns" -> {{0.2}}, "Rows" -> {{0.5}}}]}, 
             Dynamic[Typeset`var$$],
             Alignment->Automatic,
             BaseStyle->{},
             BaselinePosition->Baseline,
             DefaultBaseStyle->"OpenerView",
             ImageMargins->0,
             ImageSize->Automatic],
            Deployed->False,
            StripOnInput->False],
           OpenerView[{"CGCC submission", 
             Column[{
               Button["Copy", 
                CopyToClipboard[
                 Sledgehammer`Private`cgccString$$[]]], 
               Framed[
                Dynamic[
                 Style[
                  Sledgehammer`Private`cgccString$$[], FontFamily -> 
                  "Courier"]]]}]}, False]],
          DynamicModuleValues:>{}],
         Setting[#, {0}]& ]}
      },
      DefaultBaseStyle->"Column",
      GridBoxAlignment->{"Columns" -> {{Left}}},
      GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
     "Column"]],
   Deploy,
   DefaultBaseStyle->"Deploy"],
  DynamicModuleValues:>{{
    DownValues[Sledgehammer`Private`expr$$] = {HoldPattern[
         Sledgehammer`Private`expr$$[
          Pattern[Sledgehammer`Private`b, 
           Blank[]]]] :> Sledgehammer`preprocess[
         MakeExpression[
          StripBoxes[Sledgehammer`Private`b], StandardForm]]}}, {
    DownValues[Sledgehammer`Private`pfCode$$] = {HoldPattern[
         Sledgehammer`Private`pfCode$$[]] :> Sledgehammer`wToPostfix[
         Sledgehammer`Private`expr$$[Sledgehammer`Private`code$$]]}}, {
    DownValues[Sledgehammer`Private`cmpCode$$] = {HoldPattern[
         Sledgehammer`Private`cmpCode$$[]] :> Sledgehammer`compress[
         Sledgehammer`wToPostfix[
          Sledgehammer`Private`expr$$[Sledgehammer`Private`code$$]]]}}, {
    DownValues[Sledgehammer`Private`brCode$$] = {HoldPattern[
         Sledgehammer`Private`brCode$$[]] :> 
       Sledgehammer`Private`bitsToBraille[
         Sledgehammer`Private`cmpCode$$[]]}}, {
    DownValues[Sledgehammer`Private`lenBits$$] = {HoldPattern[
         Sledgehammer`Private`lenBits$$[]] :> Length[
         Sledgehammer`Private`cmpCode$$[]]}}, {
    DownValues[Sledgehammer`Private`lenBytes$$] = {HoldPattern[
         Sledgehammer`Private`lenBytes$$[]] :> 
       0.125 Sledgehammer`Private`lenBits$$[]}}, {
    DownValues[Sledgehammer`Private`decompCode$$] = {HoldPattern[
         Sledgehammer`Private`decompCode$$[]] :> Sledgehammer`postprocess[
         Sledgehammer`postfixToW[
          Sledgehammer`decompress[
           Sledgehammer`Private`brailleToBits[
            Sledgehammer`Private`brCode$$[]]]]]}}, {
    DownValues[Sledgehammer`Private`result$$] = {HoldPattern[
         Sledgehammer`Private`result$$[]] :> TimeConstrained[
         Sledgehammer`eval[
          Sledgehammer`Private`decompCode$$[], Sledgehammer`Private`input$$], 
         10]}}, {DownValues[Sledgehammer`Private`cgccString$$] = {HoldPattern[
         Sledgehammer`Private`cgccString$$[]] :> 
       StringJoin["# [Sledgehammer](https://github.com/tkwa/Sledgehammer), ", 
         ToString[
          Ceiling[
           Sledgehammer`Private`lenBytes$$[]]], " bytes\n\n    ", 
         Sledgehammer`Private`brCode$$[], 
         "\n\nDecompresses into this Wolfram Language function: \n\n    ", 
         ToString[
          First[
           Sledgehammer`Private`decompCode$$[]], InputForm], "\n"]}}},
  UnsavedVariables:>{}]], "Output",
 CellChangeTimes->{{3.799822150423295*^9, 3.799822150713874*^9}, 
   3.7998221986187716`*^9},
 CellLabel->"Out[6]=",ExpressionUUID->"fccdad4e-dd73-453d-b21c-963ae0931ac5"]
}, Open  ]]
},
WindowSize->{929, 988},
WindowMargins->{{69, Automatic}, {Automatic, 45}},
Magnification->1.5,
FrontEndVersion->"12.0 for Microsoft Windows (64-bit) (April 8, 2019)",
StyleDefinitions->"Default.nb"
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{}
*)
(*CellTagsIndex
CellTagsIndex->{}
*)
(*NotebookFileOutline
Notebook[{
Cell[CellGroupData[{
Cell[580, 22, 8784, 122, 97, "Input",ExpressionUUID->"e6f65d0c-15d1-459a-85d8-afacb43b0641",
 InitializationCell->True],
Cell[9367, 146, 541, 12, 94, "Message",ExpressionUUID->"c05c0587-40fb-4295-8b43-cfe6b3e76eed"],
Cell[9911, 160, 14438, 348, 579, "Output",ExpressionUUID->"fccdad4e-dd73-453d-b21c-963ae0931ac5"]
}, Open  ]]
}
]
*)


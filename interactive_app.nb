(* Content-type: application/vnd.wolfram.mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Mathematica 11.2' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       158,          7]
NotebookDataLength[     18367,        423]
NotebookOptionsPosition[     17936,        407]
NotebookOutlinePosition[     18282,        422]
CellTagsIndexPosition[     18239,        419]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{

Cell[CellGroupData[{
Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"SetDirectory", "[", " ", 
    RowBox[{"DirectoryName", "@", 
     RowBox[{"NotebookFileName", "[", "]"}]}], "]"}], ";", " ", 
   RowBox[{"Needs", "[", "\"\<SHInterpreter`\>\"", "]"}], ";"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"expr", "[", "c_", "]"}], ":=", 
    RowBox[{"rmCompoundHeads", "@", 
     RowBox[{"ToExpression", "[", 
      RowBox[{"c", ",", " ", "InputForm", ",", " ", "HoldComplete"}], 
      "]"}]}]}], ";"}], "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"pfCode", " ", ":=", " ", 
   RowBox[{"wToPostfix", "@", 
    RowBox[{"expr", "@", "code"}]}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"cmpCode", " ", ":=", " ", 
   RowBox[{"compress", "@", 
    RowBox[{"wToPostfix", "@", 
     RowBox[{"expr", "@", "code"}]}]}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"brCode", " ", ":=", " ", 
   RowBox[{"bitsToBraille", "@", "cmpCode"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"lenBits", " ", ":=", " ", 
   RowBox[{"Length", "@", "cmpCode"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"lenBytes", " ", ":=", " ", 
   RowBox[{".125", " ", "*", " ", "lenBits"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"decompCode", " ", ":=", " ", 
   RowBox[{
    RowBox[{
     RowBox[{"brCode", " ", "//", " ", "brailleToBits"}], " ", "//", " ", 
     "decompress"}], " ", "//", " ", "postfixToW"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"result", " ", ":=", " ", 
    RowBox[{"eval", "[", 
     RowBox[{"decompCode", ",", " ", "input"}], "]"}]}], ";"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"cbs", "=", 
    RowBox[{"{", "\"\<Show Braille\>\"", "}"}]}], ";"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Print", "[", 
   RowBox[{"Column", "[", 
    RowBox[{"{", 
     RowBox[{"\"\<Put code below:\>\"", ",", "\[IndentingNewLine]", 
      RowBox[{"InputField", "[", 
       RowBox[{
        RowBox[{"Dynamic", "@", "code"}], ",", "String", ",", " ", 
        RowBox[{"FieldSize", " ", "\[Rule]", " ", "Large"}]}], "]"}], ",", 
      "\[IndentingNewLine]", 
      RowBox[{"Row", "[", 
       RowBox[{"{", 
        RowBox[{"\"\<Input\>\"", ",", 
         RowBox[{"InputField", "[", 
          RowBox[{"Dynamic", "@", "input"}], "]"}]}], "}"}], "]"}], ",", 
      "\[IndentingNewLine]", 
      RowBox[{"Button", "[", "\"\<Update\>\"", "]"}], ",", 
      "\[IndentingNewLine]", 
      RowBox[{"CheckboxBar", "[", 
       RowBox[{
        RowBox[{"Dynamic", "@", "cbs"}], ",", 
        RowBox[{"{", 
         RowBox[{
         "\"\<Show postfix\>\"", ",", "\"\<Show bits\>\"", ",", 
          "\"\<Show Braille\>\"", ",", "\"\<Show decompressed\>\"", ",", " ", 
          "\"\<Eval\>\""}], "}"}]}], "]"}], ",", "\[IndentingNewLine]", 
      RowBox[{"Dynamic", "@", 
       RowBox[{"If", "[", 
        RowBox[{
         RowBox[{"MemberQ", "[", 
          RowBox[{"cbs", ",", "\"\<Show postfix\>\""}], "]"}], ",", 
         RowBox[{"Dynamic", "[", "pfCode", "]"}], ",", "\"\<\>\""}], "]"}]}], 
      ",", "\[IndentingNewLine]", 
      RowBox[{"Dynamic", "@", 
       RowBox[{"If", "[", 
        RowBox[{
         RowBox[{"MemberQ", "[", 
          RowBox[{"cbs", ",", "\"\<Show bits\>\""}], "]"}], ",", 
         RowBox[{"Dynamic", "[", "cmpCode", "]"}], ",", "\"\<\>\""}], "]"}]}],
       ",", "\[IndentingNewLine]", 
      RowBox[{"Dynamic", "@", 
       RowBox[{"If", "[", 
        RowBox[{
         RowBox[{"MemberQ", "[", 
          RowBox[{"cbs", ",", "\"\<Show Braille\>\""}], "]"}], ",", 
         RowBox[{"Dynamic", "[", "brCode", "]"}], ",", "\"\<\>\""}], "]"}]}], 
      ",", "\[IndentingNewLine]", 
      RowBox[{"Dynamic", "@", 
       RowBox[{"If", "[", 
        RowBox[{
         RowBox[{"MemberQ", "[", 
          RowBox[{"cbs", ",", "\"\<Show decompressed\>\""}], "]"}], ",", 
         RowBox[{"Dynamic", "[", 
          RowBox[{"decompCode", " ", "//", " ", "InputForm"}], "]"}], ",", 
         "\"\<\>\""}], "]"}]}], ",", "\[IndentingNewLine]", 
      RowBox[{"Dynamic", "@", 
       RowBox[{"If", "[", 
        RowBox[{
         RowBox[{"MemberQ", "[", 
          RowBox[{"cbs", ",", "\"\<Eval\>\""}], "]"}], ",", 
         RowBox[{"Dynamic", "[", 
          RowBox[{"result", " ", "//", " ", "InputForm"}], "]"}], ",", 
         "\"\<\>\""}], "]"}]}], ",", "\[IndentingNewLine]", 
      RowBox[{"Style", "[", 
       RowBox[{
        RowBox[{"Row", "@", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"Dynamic", "@", "lenBits"}], ",", "\"\< bits = \>\"", ",", 
           RowBox[{"Dynamic", "@", "lenBytes"}], " ", ",", " ", 
           "\"\< bytes\>\""}], "}"}]}], ",", 
        RowBox[{"FontSize", "\[Rule]", "Larger"}]}], "]"}]}], 
     "\[IndentingNewLine]", "}"}], "]"}], "]"}], 
  ";"}], "\[IndentingNewLine]"}], "Input",
 CellChangeTimes->{{3.7674613148730574`*^9, 3.767461317557584*^9}, {
   3.767461364008748*^9, 3.7674613865786743`*^9}, {3.767461431823718*^9, 
   3.767461464194298*^9}, {3.7674617646912537`*^9, 3.7674618275048046`*^9}, {
   3.7674618610857086`*^9, 3.7674619675655727`*^9}, {3.7674620047422733`*^9, 
   3.767462045731682*^9}, {3.767462194976065*^9, 3.767462213418771*^9}, {
   3.767463578975291*^9, 3.767463649494282*^9}, 3.767463691401148*^9, {
   3.767463722016713*^9, 3.7674637240182505`*^9}, {3.7674639922275553`*^9, 
   3.7674640030918894`*^9}, {3.7674641293680687`*^9, 3.767464135973136*^9}, {
   3.7674641659742904`*^9, 3.7674642114642315`*^9}, {3.767464252486929*^9, 
   3.7674642721775813`*^9}, {3.7674643116510334`*^9, 
   3.7674643221019216`*^9}, {3.767464902874652*^9, 3.767464949993264*^9}, {
   3.767464996295643*^9, 3.7674650560815697`*^9}, {3.767465087734498*^9, 
   3.767465312411725*^9}, {3.767465396905928*^9, 3.767465419819413*^9}, {
   3.76746551951373*^9, 3.7674655950512347`*^9}, {3.767465695486286*^9, 
   3.7674658296513066`*^9}, {3.7674658601985617`*^9, 3.767466059744135*^9}, {
   3.7674661091934223`*^9, 3.767466263717037*^9}, {3.767466297229704*^9, 
   3.7674665575736275`*^9}, {3.767466594478712*^9, 3.7674666006189756`*^9}, {
   3.7674667152675047`*^9, 3.767466788528231*^9}, {3.76746685686872*^9, 
   3.767466901190629*^9}, {3.767467013726942*^9, 3.7674670255639734`*^9}, {
   3.767467181484248*^9, 3.767467192045411*^9}, {3.7674672524645452`*^9, 
   3.767467295665216*^9}, {3.7674673574685764`*^9, 3.7674674963081846`*^9}, {
   3.7674675289403095`*^9, 3.7674675340541325`*^9}, {3.76746757298781*^9, 
   3.7674675874164677`*^9}, {3.76746763087671*^9, 3.767467642692244*^9}, {
   3.7674676824478345`*^9, 3.76746770586156*^9}, {3.767467740776146*^9, 
   3.767467741777401*^9}, {3.7674908350984564`*^9, 3.7674908982434993`*^9}, {
   3.767490956249745*^9, 3.767490960718503*^9}, {3.7674911819334745`*^9, 
   3.76749120742262*^9}, {3.767491239062975*^9, 3.767491271935687*^9}, {
   3.767491311969945*^9, 3.7674913124525614`*^9}, {3.767491457025051*^9, 
   3.767491465833515*^9}, {3.767491511152277*^9, 3.767491610387621*^9}, {
   3.7674916786753674`*^9, 3.767491695710125*^9}, {3.7674917389783974`*^9, 
   3.767491773622029*^9}, {3.7674918896280003`*^9, 3.767491976751356*^9}, {
   3.7674920148435717`*^9, 3.7674920484324055`*^9}, {3.7674921611644077`*^9, 
   3.767492176593827*^9}, {3.7674922344383235`*^9, 3.767492279946725*^9}, {
   3.7674923480302687`*^9, 3.76749242773275*^9}, {3.767492468162644*^9, 
   3.7674925125218925`*^9}, {3.7674925870578175`*^9, 3.767492629731082*^9}, {
   3.767492669719041*^9, 3.767492678647958*^9}, {3.76749271652026*^9, 
   3.7674927601610703`*^9}, {3.767492792380678*^9, 3.76749289128728*^9}, {
   3.7674929831545315`*^9, 3.767493106105425*^9}, {3.7674931535355244`*^9, 
   3.7674935154494314`*^9}, {3.7674935548042355`*^9, 3.767493568009781*^9}, {
   3.7675502021197753`*^9, 3.767550223331442*^9}, {3.76755025428952*^9, 
   3.7675502959652057`*^9}, {3.7675503619967723`*^9, 
   3.7675505282367163`*^9}, {3.7675505993953695`*^9, 3.7675506262538643`*^9}, 
   3.7675506781674623`*^9, {3.7675507360988398`*^9, 3.7675507391395445`*^9}, {
   3.7675507883085337`*^9, 3.7675508060966406`*^9}, {3.767550919705526*^9, 
   3.7675509946999006`*^9}, {3.76755129589685*^9, 3.767551298257598*^9}, {
   3.767568823156766*^9, 3.767568852921087*^9}, {3.7675689088055058`*^9, 
   3.767568909460805*^9}, 3.7675731142112813`*^9, {3.767573884481518*^9, 
   3.767573896916336*^9}, {3.767574011230595*^9, 3.7675740392799945`*^9}, {
   3.767811274982366*^9, 3.7678113002617297`*^9}, {3.7678327984615593`*^9, 
   3.767832849288883*^9}, {3.767832904004052*^9, 3.7678329169700994`*^9}, {
   3.7678329498748903`*^9, 3.767832964460842*^9}, {3.7678330484555025`*^9, 
   3.7678332605956554`*^9}, {3.767919464781975*^9, 3.767919529082487*^9}, 
   3.767988183495757*^9, {3.767988381621436*^9, 3.767988393738879*^9}, {
   3.767988431074938*^9, 3.7679884706017113`*^9}, {3.76798853116011*^9, 
   3.76798855464403*^9}, {3.767988614070641*^9, 3.7679886471721025`*^9}, {
   3.7679887414141474`*^9, 3.767988965049281*^9}, {3.7679893147393045`*^9, 
   3.767989435566346*^9}, {3.7679894912123876`*^9, 3.7679895188993235`*^9}, {
   3.767989572012633*^9, 3.7679895970567913`*^9}, {3.7679899105291014`*^9, 
   3.767989912234855*^9}, {3.7679909536356936`*^9, 3.7679910432172136`*^9}, {
   3.7679911496559176`*^9, 3.7679911688188925`*^9}, {3.7679915495476694`*^9, 
   3.767991552076136*^9}, {3.76799171895324*^9, 3.767991733777089*^9}, 
   3.767993554113516*^9, {3.7679940002991095`*^9, 3.767994003280307*^9}, {
   3.767994083174265*^9, 
   3.767994091009771*^9}},ExpressionUUID->"e6f65d0c-15d1-459a-85d8-\
afacb43b0641"],

Cell[BoxData[
 TagBox[GridBox[{
    {"\<\"Put code below:\"\>"},
    {
     InputFieldBox[Dynamic[$CellContext`code], String,
      FieldSize->Large]},
    {
     TemplateBox[{"\"Input\"",InputFieldBox[
        Dynamic[$CellContext`input]]},
      "RowDefault"]},
    {
     ButtonBox["\<\"Update\"\>",
      Appearance->Automatic,
      ButtonFunction:>{},
      Evaluator->None,
      Method->"Preemptive"]},
    {
     InterpretationBox[
      StyleBox[
       RowBox[{GridBox[{
          {
           CheckboxBox[Dynamic[
             MemberQ[$CellContext`cbs, "Show postfix"], 
             BoxForm`TogglerBarFunction[$CellContext`cbs, "Show postfix"]& ],
            DefaultBaseStyle->"CheckboxBar"], 
           StyleBox["\<\"Show postfix\"\>", "CheckboxBarLabel",
            StripOnInput->False]}
         },
         AutoDelete->False,
         GridBoxAlignment->{
          "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, 
           "Rows" -> {{Baseline}}, "RowsIndexed" -> {}},
         GridBoxItemSize->{
          "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
         GridBoxSpacings->{"Columns" -> {
             Offset[0.27999999999999997`], {
              Offset[0.21]}, 
             Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
             Offset[0.2], {
              Offset[0.4]}, 
             Offset[0.2]}, "RowsIndexed" -> {}}], "  ", GridBox[{
          {
           CheckboxBox[Dynamic[
             MemberQ[$CellContext`cbs, "Show bits"], 
             BoxForm`TogglerBarFunction[$CellContext`cbs, "Show bits"]& ],
            DefaultBaseStyle->"CheckboxBar"], 
           StyleBox["\<\"Show bits\"\>", "CheckboxBarLabel",
            StripOnInput->False]}
         },
         AutoDelete->False,
         GridBoxAlignment->{
          "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, 
           "Rows" -> {{Baseline}}, "RowsIndexed" -> {}},
         GridBoxItemSize->{
          "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
         GridBoxSpacings->{"Columns" -> {
             Offset[0.27999999999999997`], {
              Offset[0.21]}, 
             Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
             Offset[0.2], {
              Offset[0.4]}, 
             Offset[0.2]}, "RowsIndexed" -> {}}], "  ", GridBox[{
          {
           CheckboxBox[Dynamic[
             MemberQ[$CellContext`cbs, "Show Braille"], 
             BoxForm`TogglerBarFunction[$CellContext`cbs, "Show Braille"]& ],
            DefaultBaseStyle->"CheckboxBar"], 
           StyleBox["\<\"Show Braille\"\>", "CheckboxBarLabel",
            StripOnInput->False]}
         },
         AutoDelete->False,
         GridBoxAlignment->{
          "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, 
           "Rows" -> {{Baseline}}, "RowsIndexed" -> {}},
         GridBoxItemSize->{
          "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
         GridBoxSpacings->{"Columns" -> {
             Offset[0.27999999999999997`], {
              Offset[0.21]}, 
             Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
             Offset[0.2], {
              Offset[0.4]}, 
             Offset[0.2]}, "RowsIndexed" -> {}}], "  ", GridBox[{
          {
           CheckboxBox[Dynamic[
             MemberQ[$CellContext`cbs, "Show decompressed"], 
             BoxForm`TogglerBarFunction[$CellContext`cbs, 
              "Show decompressed"]& ],
            DefaultBaseStyle->"CheckboxBar"], 
           StyleBox["\<\"Show decompressed\"\>", "CheckboxBarLabel",
            StripOnInput->False]}
         },
         AutoDelete->False,
         GridBoxAlignment->{
          "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, 
           "Rows" -> {{Baseline}}, "RowsIndexed" -> {}},
         GridBoxItemSize->{
          "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
         GridBoxSpacings->{"Columns" -> {
             Offset[0.27999999999999997`], {
              Offset[0.21]}, 
             Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
             Offset[0.2], {
              Offset[0.4]}, 
             Offset[0.2]}, "RowsIndexed" -> {}}], "  ", GridBox[{
          {
           CheckboxBox[Dynamic[
             MemberQ[$CellContext`cbs, "Eval"], 
             BoxForm`TogglerBarFunction[$CellContext`cbs, "Eval"]& ],
            DefaultBaseStyle->"CheckboxBar"], 
           StyleBox["\<\"Eval\"\>", "CheckboxBarLabel",
            StripOnInput->False]}
         },
         AutoDelete->False,
         GridBoxAlignment->{
          "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, 
           "Rows" -> {{Baseline}}, "RowsIndexed" -> {}},
         GridBoxItemSize->{
          "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
         GridBoxSpacings->{"Columns" -> {
             Offset[0.27999999999999997`], {
              Offset[0.21]}, 
             Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
             Offset[0.2], {
              Offset[0.4]}, 
             Offset[0.2]}, "RowsIndexed" -> {}}]}], "Deploy"],
      CheckboxBar[
       Dynamic[$CellContext`cbs], {
       "Show postfix", "Show bits", "Show Braille", "Show decompressed", 
        "Eval"}]]},
    {
     DynamicBox[ToBoxes[
       If[
        MemberQ[$CellContext`cbs, "Show postfix"], 
        Dynamic[$CellContext`pfCode], ""], StandardForm],
      ImageSizeCache->{0., {0., 6.}}]},
    {
     DynamicBox[ToBoxes[
       If[
        MemberQ[$CellContext`cbs, "Show bits"], 
        Dynamic[$CellContext`cmpCode], ""], StandardForm],
      ImageSizeCache->{0., {0., 6.}}]},
    {
     DynamicBox[ToBoxes[
       If[
        MemberQ[$CellContext`cbs, "Show Braille"], 
        Dynamic[$CellContext`brCode], ""], StandardForm],
      ImageSizeCache->{98., {0., 8.}}]},
    {
     DynamicBox[ToBoxes[
       If[
        MemberQ[$CellContext`cbs, "Show decompressed"], 
        Dynamic[
         InputForm[$CellContext`decompCode]], ""], StandardForm],
      ImageSizeCache->{0., {0., 6.}}]},
    {
     DynamicBox[ToBoxes[
       If[
        MemberQ[$CellContext`cbs, "Eval"], 
        Dynamic[
         InputForm[$CellContext`result]], ""], StandardForm],
      ImageSizeCache->{14., {0., 8.}}]},
    {
     StyleBox[
      TemplateBox[{DynamicBox[
         ToBoxes[$CellContext`lenBits, StandardForm]],"\" bits = \"",
        DynamicBox[
         ToBoxes[$CellContext`lenBytes, StandardForm]],"\" bytes\""},
       "RowDefault"],
      StripOnInput->False,
      FontSize->Larger]}
   },
   DefaultBaseStyle->"Column",
   GridBoxAlignment->{"Columns" -> {{Left}}},
   GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
  "Column"]], "Print",
 CellChangeTimes->{
  3.7679883953420267`*^9, 3.767988472339842*^9, 3.767988559309228*^9, {
   3.7679886310264893`*^9, 3.767988648610493*^9}, 3.76798876579138*^9, {
   3.7679888404645863`*^9, 3.767988896218018*^9}, {3.767988935147524*^9, 
   3.7679889658452845`*^9}, 3.767989132225211*^9, 3.767989442728425*^9, {
   3.7679894999727736`*^9, 3.767989507979733*^9}, 3.7679895794366045`*^9, 
   3.767989685005821*^9, {3.7679898477537103`*^9, 3.7679898502479467`*^9}, 
   3.7679899130413513`*^9, {3.767991045724841*^9, 3.767991067405207*^9}, 
   3.767991171345604*^9, 3.767991222598098*^9, {3.767991392774181*^9, 
   3.7679913950934997`*^9}, 3.767991552583451*^9, {3.7679917212753987`*^9, 
   3.767991734358586*^9}, 3.7679935373921757`*^9, 3.76799379385106*^9, {
   3.7679938576201973`*^9, 3.7679938873754964`*^9}, 3.7679940041446333`*^9, {
   3.767994035583103*^9, 
   3.7679940928193007`*^9}},ExpressionUUID->"84866d5d-68e4-4755-92c3-\
8fe4ebb02eac"]
}, Open  ]]
},
WindowSize->{958, 988},
WindowMargins->{{Automatic, -7}, {Automatic, 0}},
FrontEndVersion->"11.2 for Microsoft Windows (64-bit) (September 10, 2017)",
StyleDefinitions->"Default.nb"
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{}
*)
(*CellTagsIndex
CellTagsIndex->{}
*)
(*NotebookFileOutline
Notebook[{
Cell[CellGroupData[{
Cell[580, 22, 9694, 190, 523, "Input",ExpressionUUID->"e6f65d0c-15d1-459a-85d8-afacb43b0641"],
Cell[10277, 214, 7643, 190, 243, "Print",ExpressionUUID->"84866d5d-68e4-4755-92c3-8fe4ebb02eac"]
}, Open  ]]
}
]
*)

